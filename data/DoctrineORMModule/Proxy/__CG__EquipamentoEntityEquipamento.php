<?php

namespace DoctrineORMModule\Proxy\__CG__\Equipamento\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Equipamento extends \Equipamento\Entity\Equipamento implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function addTombotombo(\Equipamento\Entity\Tombo $tombotombo)
    {
        $this->__load();
        return parent::addTombotombo($tombotombo);
    }

    public function removeTombotombo(\Equipamento\Entity\Tombo $tombotombo)
    {
        $this->__load();
        return parent::removeTombotombo($tombotombo);
    }

    public function getTombotombo()
    {
        $this->__load();
        return parent::getTombotombo();
    }

    public function getIdequipamento()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idequipamento"];
        }
        $this->__load();
        return parent::getIdequipamento();
    }

    public function setNtombo($ntombo)
    {
        $this->__load();
        return parent::setNtombo($ntombo);
    }

    public function getNtombo()
    {
        $this->__load();
        return parent::getNtombo();
    }

    public function setObservacao($observacao)
    {
        $this->__load();
        return parent::setObservacao($observacao);
    }

    public function getObservacao()
    {
        $this->__load();
        return parent::getObservacao();
    }

    public function setTipoequipamentotipoequipamento(\Equipamento\Entity\TipoEquipamento $tipoequipamentotipoequipamento = NULL)
    {
        $this->__load();
        return parent::setTipoequipamentotipoequipamento($tipoequipamentotipoequipamento);
    }

    public function getTipoequipamentotipoequipamento()
    {
        $this->__load();
        return parent::getTipoequipamentotipoequipamento();
    }

    public function setSalasala(\Sala\Entity\Sala $salasala = NULL)
    {
        $this->__load();
        return parent::setSalasala($salasala);
    }

    public function getSalasala()
    {
        $this->__load();
        return parent::getSalasala();
    }

    public function setProjetoprojeto(\Projeto\Entity\Projeto $projetoprojeto = NULL)
    {
        $this->__load();
        return parent::setProjetoprojeto($projetoprojeto);
    }

    public function getProjetoprojeto()
    {
        $this->__load();
        return parent::getProjetoprojeto();
    }

    public function getArrayCopy()
    {
        $this->__load();
        return parent::getArrayCopy();
    }

    public function populate($data = array (
))
    {
        $this->__load();
        return parent::populate($data);
    }

    public function setInputFilter(\Zend\InputFilter\InputFilterInterface $inputFilter)
    {
        $this->__load();
        return parent::setInputFilter($inputFilter);
    }

    public function getInputFilter()
    {
        $this->__load();
        return parent::getInputFilter();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idequipamento', 'ntombo', 'observacao', 'tipoequipamentotipoequipamento', 'salasala', 'projetoprojeto', 'tombotombo');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}