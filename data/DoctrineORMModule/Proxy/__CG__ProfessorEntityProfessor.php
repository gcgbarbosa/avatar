<?php

namespace DoctrineORMModule\Proxy\__CG__\Professor\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Professor extends \Professor\Entity\Professor implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdprofessor()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idprofessor"];
        }
        $this->__load();
        return parent::getIdprofessor();
    }

    public function setMatriculaprofessor($matriculaprofessor)
    {
        $this->__load();
        return parent::setMatriculaprofessor($matriculaprofessor);
    }

    public function getMatriculaprofessor()
    {
        $this->__load();
        return parent::getMatriculaprofessor();
    }

    public function setNomeprofessor($nomeprofessor)
    {
        $this->__load();
        return parent::setNomeprofessor($nomeprofessor);
    }

    public function getNomeprofessor()
    {
        $this->__load();
        return parent::getNomeprofessor();
    }

    public function setEmailprofessor($emailprofessor)
    {
        $this->__load();
        return parent::setEmailprofessor($emailprofessor);
    }

    public function getEmailprofessor()
    {
        $this->__load();
        return parent::getEmailprofessor();
    }

    public function setTelefoneprofessor($telefoneprofessor)
    {
        $this->__load();
        return parent::setTelefoneprofessor($telefoneprofessor);
    }

    public function getTelefoneprofessor()
    {
        $this->__load();
        return parent::getTelefoneprofessor();
    }

    public function setAreadeatuacao($areadeatuacao)
    {
        $this->__load();
        return parent::setAreadeatuacao($areadeatuacao);
    }

    public function getAreadeatuacao()
    {
        $this->__load();
        return parent::getAreadeatuacao();
    }

    public function setFormacao($formacao)
    {
        $this->__load();
        return parent::setFormacao($formacao);
    }

    public function getFormacao()
    {
        $this->__load();
        return parent::getFormacao();
    }

    public function setTitulacao($titulacao)
    {
        $this->__load();
        return parent::setTitulacao($titulacao);
    }

    public function getTitulacao()
    {
        $this->__load();
        return parent::getTitulacao();
    }

    public function setClasse($classe)
    {
        $this->__load();
        return parent::setClasse($classe);
    }

    public function getClasse()
    {
        $this->__load();
        return parent::getClasse();
    }

    public function setRegimedetrabalho($regimedetrabalho)
    {
        $this->__load();
        return parent::setRegimedetrabalho($regimedetrabalho);
    }

    public function getRegimedetrabalho()
    {
        $this->__load();
        return parent::getRegimedetrabalho();
    }

    public function setTipovinculo($tipovinculo)
    {
        $this->__load();
        return parent::setTipovinculo($tipovinculo);
    }

    public function getTipovinculo()
    {
        $this->__load();
        return parent::getTipovinculo();
    }

    public function setDatanasc($datanasc)
    {
        $this->__load();
        return parent::setDatanasc($datanasc);
    }

    public function getDatanasc()
    {
        $this->__load();
        return parent::getDatanasc();
    }

    public function addProjetoprojeto(\Projeto\Entity\Projeto $projetoprojeto)
    {
        $this->__load();
        return parent::addProjetoprojeto($projetoprojeto);
    }

    public function removeProjetoprojeto(\Projeto\Entity\Projeto $projetoprojeto)
    {
        $this->__load();
        return parent::removeProjetoprojeto($projetoprojeto);
    }

    public function getProjetoprojeto()
    {
        $this->__load();
        return parent::getProjetoprojeto();
    }

    public function setDepartamentodepartamento(\Professor\Entity\Departamento $departamentodepartamento = NULL)
    {
        $this->__load();
        return parent::setDepartamentodepartamento($departamentodepartamento);
    }

    public function getDepartamentodepartamento()
    {
        $this->__load();
        return parent::getDepartamentodepartamento();
    }

    public function getArrayCopy()
    {
        $this->__load();
        return parent::getArrayCopy();
    }

    public function populate($data = array (
))
    {
        $this->__load();
        return parent::populate($data);
    }

    public function setInputFilter(\Zend\InputFilter\InputFilterInterface $inputFilter)
    {
        $this->__load();
        return parent::setInputFilter($inputFilter);
    }

    public function getInputFilter()
    {
        $this->__load();
        return parent::getInputFilter();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idprofessor', 'matriculaprofessor', 'nomeprofessor', 'emailprofessor', 'telefoneprofessor', 'areadeatuacao', 'formacao', 'titulacao', 'classe', 'regimedetrabalho', 'tipovinculo', 'datanasc', 'projetoprojeto', 'departamentodepartamento');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}